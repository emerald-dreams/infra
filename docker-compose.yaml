version: "3.3"

services:
    caddy:
        image: caddy:alpine
        container_name: caddy
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
            - "443:443/udp"
        volumes:
            - ./caddy/data:/data
            - ./caddy/config:/config
            - ./Caddyfile:/etc/caddy/Caddyfile
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: always
        ports:
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./portainer/data:/data
    pgsql:
        image: postgres
        container_name: pgsql
        restart: unless-stopped
        ports:
            - "5432:5432"
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: emerald
            POSTGRES_PASSWORD: Emerald123
            POSTGRES_DB: emerald
    api:
        image: buatanid/emerald-dreams-be-main:latest
        container_name: api
        restart: unless-stopped
        ports:
            - "8001:8000"
        env_file:
            - ../api/.env
    api-staging:
        image: buatanid/emerald-dreams-be-develop:latest
        container_name: api-staging
        restart: unless-stopped
        ports:
            - "8002:8000"
        env_file:
            - ../api/.env
    cms:
        build: ../cms
        container_name: cms
        restart: unless-stopped
        ports:
            - "3000:3000"
        env_file:
            - ../cms/.env
    web:
        build: ../web
        container_name: web
        restart: unless-stopped
        ports:
            - "3001:3000"
        env_file:
            - ../web/.env